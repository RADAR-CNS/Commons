apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'com.jfrog.artifactory'

def sharedManifest = manifest {
    attributes("Implementation-Title": project.name,
            "Implementation-Version": version)
}

jar {
    archiveBaseName.set(project.name)
    manifest.from sharedManifest
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('sources')
    from sourceSets.main.allSource
    manifest.from sharedManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    archiveBaseName.set(project.name)
    archiveClassifier.set('javadoc')
    from javadoc.destinationDir
    manifest.from sharedManifest
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        mavenJar(MavenPublication) {
            from components.java
            artifact sourcesJar
            artifact javadocJar

            pom {
                name = project.name
                description = project.description
                url = githubUrl
                licenses {
                    license {
                        name = 'The Apache Software License, Version 2.0'
                        url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        distribution = 'repo'
                    }
                }
                developers {
                    developer {
                        id = 'blootsvoets'
                        name = 'Joris Borgdorff'
                        email = 'joris@thehyve.nl'
                        organization = 'The Hyve'
                    }
                    developer {
                        id = 'nivemaham'
                        name = 'Nivethika Mahasivam'
                        email = 'nivethika@thehyve.nl'
                        organization = 'The Hyve'
                    }
                }
                issueManagement {
                    system = 'GitHub'
                    url = githubUrl + '/issues'
                }
                organization {
                    name = 'RADAR-base'
                    url = website
                }
                scm {
                    connection = 'scm:git:' + githubUrl
                    url = githubUrl
                }
            }
        }
    }
}

bintray {
    user project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override false
    publications 'mavenJar'
    pkg {
        repo = project.group
        name = project.name
        userOrg = 'radar-cns'
        desc = project.description
        licenses = ['Apache-2.0']
        websiteUrl = website
        issueTrackerUrl = issueUrl
        vcsUrl = githubUrl
        githubRepo = githubRepoName
        githubReleaseNotesFile = 'README.md'
        version {
            name = project.version
            desc = project.description
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}


artifactory {
    contextUrl = 'https://oss.jfrog.org/artifactory'
    publish {
        repository {
            repoKey = 'oss-snapshot-local'
            username = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
            password = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
            maven = true
        }
    }
}

artifactoryPublish {
    publications('mavenJar')
}
