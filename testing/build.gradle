apply plugin: 'java'
apply plugin: 'java-library'
apply plugin: 'maven-publish'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'pmd'
apply plugin: 'checkstyle'

version = commonVersion
group = commonGroup
ext.testingName = 'radar-commons-testing'

targetCompatibility = 1.8
sourceCompatibility = 1.8

repositories {
    jcenter()
    maven { url 'http://packages.confluent.io/maven/' }
    maven { url 'http://dl.bintray.com/typesafe/maven-releases' }
}

dependencies {
    api rootProject
    api group: 'org.apache.avro', name: 'avro', version: avroVersion

    implementation group: 'com.fasterxml.jackson.core' , name: 'jackson-databind' , version: jacksonVersion

    // Direct producer uses KafkaAvroSerializer if initialized
    testImplementation group: 'junit', name: 'junit', version: junitVersion
    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: hamcrestVersion
}

checkstyle {
    // ignore tests
    sourceSets = [sourceSets.main]
}

pmd {
    // ignore tests
    sourceSets = [sourceSets.main]
}

def pomConfig = {
    licenses {
        license {
            name "The Apache Software License, Version 2.0"
            url "http://www.apache.org/licenses/LICENSE-2.0.txt"
            distribution testingName
        }
    }
    developers {
        developer {
            id "radar-cns"
            name "Nivethika"
            email "nivethika@thehyve.nl"
        }
    }
}

ext.sharedManifest = manifest {
    attributes("Implementation-Title": testingName,
            "Implementation-Version": version)
}

jar {
    baseName testingName
    manifest.from sharedManifest
}

// custom tasks for creating source/javadoc jars
task sourcesJar(type: Jar, dependsOn: classes) {
    classifier = 'sources'
    from sourceSets.main.output
    manifest.from sharedManifest
}

task javadocJar(type: Jar, dependsOn: javadoc) {
    classifier = 'javadoc'
    from javadoc.destinationDir
    manifest.from sharedManifest
}

// add javadoc/source jar tasks as artifacts
artifacts {
    archives sourcesJar, javadocJar
}

publishing {
    publications {
        RadarCommonsTestingPublication(MavenPublication) {
            from components.java

            groupId project.group
            artifactId testingName
            artifact javadocJar
            artifact sourcesJar
            version project.version
            pom.withXml {
                def root = asNode()
                root.appendNode('description', 'RADAR Common testing library containing testing bridges and utils.')
                root.appendNode('name', testingName)
                root.appendNode('url', vcsUrl)
                root.children().last() + pomConfig
            }
        }
    }
}

bintray {
    user = project.hasProperty('bintrayUser') ? project.property('bintrayUser') : System.getenv('BINTRAY_USER')
    key = project.hasProperty('bintrayApiKey') ? project.property('bintrayApiKey') : System.getenv('BINTRAY_API_KEY')
    override = false
    publications = ['RadarCommonsTestingPublication']
    pkg {
        repo = project.group
        name = testingName
        userOrg = 'radar-cns'
        licenses = ['Apache-2.0']
        vcsUrl = vcsUrl
        version {
            name = project.version
            desc = 'RADAR-Commons testing utilities: Initial snapshot'
            vcsTag = System.getenv('TRAVIS_TAG')
            released = new Date()
        }
    }
}